trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: 'latest'

stages:
  - stage: setup
    jobs:
      - job: 
        continueOnError: false
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install awscli jq
            displayName: 'Install pip, AWS CLI, and jq'    

          - script: |
              set -e
              echo "Logging in to Azure..."
              export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
              export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
              export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
              export ARM_TENANT_ID=$(ARM_TENANT_ID)
              az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
            displayName: 'Azure Login'

          - script: |
              echo "Fetching AWS credentials from Azure Key Vault..."
              aws_access_key_id=$(az keyvault secret show --vault-name azpipelinevault --name "AWSAccessKeyId" --query "value" -o tsv)
              aws_secret_access_key=$(az keyvault secret show --vault-name azpipelinevault --name "AWSSecretAccessKey" --query "value" -o tsv)

              echo "AWS Access Key ID: $aws_access_key_id"
              echo "AWS Secret Access Key: $aws_secret_access_key"

              if [ -z "$aws_access_key_id" ]; then
                echo "AWS Access Key ID is empty"
              else
                echo "AWS Access Key ID fetched successfully"
              fi

              if [ -z "$aws_secret_access_key" ]; then
                echo "AWS Secret Access Key is empty"
              else
                echo "AWS Secret Access Key fetched successfully"
              fi

              export AWS_ACCESS_KEY_ID=$aws_access_key_id
              export AWS_SECRET_ACCESS_KEY=$aws_secret_access_key

              echo "Configuring AWS CLI..."
              aws configure set aws_access_key_id $aws_access_key_id
              aws configure set aws_secret_access_key $aws_secret_access_key
              aws sts get-caller-identity
            displayName: 'Fetch, Log, and Configure AWS CLI'

          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'

          - script: |
              terraform init
            displayName: 'Terraform init'

          - script: |
              terraform validate
            displayName: 'Terraform validate'

          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform plan'

          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform apply'

          - script: |
              # Verify resources creation
              terraform output
            displayName: 'Verify Terraform outputs'
