trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: 'latest'

stages:
  - stage: setup
    jobs:
      - job: 
        continueOnError: false
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
          - script: |
              python -m pip install --upgrade pip
              pip install awscli jq
            displayName: 'Install pip, AWS CLI, and jq'

          - task: DownloadSecureFile@1
            name: azServicePrincipal
            inputs:
              secureFile: 'azure-sp.json'  # Replace with the name of your service principal file

          - script: |
              # Read and parse JSON file
              configFileContents=$(cat $(azServicePrincipal.secureFilePath))

              # Extract specific values
              clientId=$(echo $configFileContents | jq -r '.clientId')
              clientSecret=$(echo $configFileContents | jq -r '.clientSecret')
              subscriptionId=$(echo $configFileContents | jq -r '.subscriptionId')
              tenantId=$(echo $configFileContents | jq -r '.tenantId')

              echo "##vso[task.setvariable variable=clientId]$clientId"
              echo "##vso[task.setvariable variable=clientSecret]$clientSecret"
              echo "##vso[task.setvariable variable=subscriptionId]$subscriptionId"
              echo "##vso[task.setvariable variable=tenantId]$tenantId"
            displayName: 'Parse JSON and Set Variables'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'AzurePipelineServiceConnection'  # Replace with your Azure service connection
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az login --service-principal -u $(clientId) -p $(clientSecret) --tenant $(tenantId)
            displayName: 'Login to Azure with Service Principal'

          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'AzurePipelineServiceConnection'  # Replace with your Azure subscription
              KeyVaultName: 'azpipelinevault'  # Replace with your Key Vault name
              SecretsFilter: '*'
              RunAsPreJob: true

          - script: |
              aws_access_key_id=$(az keyvault secret show --vault-name azpipelinevault --name "AWSAccessKeyId" --query "value" -o tsv)
              aws_secret_access_key=$(az keyvault secret show --vault-name azpipelinevault --name "AWSSecretAccessKey" --query "value" -o tsv)
              
              echo "##vso[task.setvariable variable=AWS_ACCESS_KEY_ID]$aws_access_key_id"
              echo "##vso[task.setvariable variable=AWS_SECRET_ACCESS_KEY]$aws_secret_access_key"
              
              export AWS_ACCESS_KEY_ID=$aws_access_key_id
              export AWS_SECRET_ACCESS_KEY=$aws_secret_access_key
              
              aws sts get-caller-identity
            displayName: 'Configure and Verify AWS CLI'

          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'

          - script: |
              terraform init
            displayName: 'Terraform init'

          - script: |
              terraform validate
            displayName: 'Terraform validate'

          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform plan'

          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform apply'

          - script: |
              # Verify resources creation
              terraform output
            displayName: 'Verify Terraform outputs'
