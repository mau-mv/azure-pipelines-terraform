trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: 'latest'

stages:
  - stage: setup
    jobs:
      - job: 
        continueOnError: false
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install awscli jq
            displayName: 'Install pip and AWS CLI'

          - script: |
              echo "Setting environment variables for Azure authentication..."
              export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
              export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
              export ARM_TENANT_ID=$(ARM_TENANT_ID)
              export AWS_ACCESS_KEY_ID=$(aws_access_key_id)
              export AWS_SECRET_ACCESS_KEY=$(aws_secret_access_key)
            displayName: 'Set Azure authentication variables'

          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '$(TF_VERSION)'
          - task: TerraformTaskV4@4
            displayName: Initialize Terraform
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'WorkloadServiceConnection'
              backendAzureRmResourceGroupName: 'azurepipelinesrg'
              backendAzureRmStorageAccountName: 'maumvmodulestorageacct'
              backendAzureRmContainerName: 'maumvterraformstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            name: terraformPlan
            displayName: Create Terraform Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out main.tfplan'
              environmentServiceNameAzureRM: 'WorkloadServiceConnection'
          - task: TerraformTaskV4@4
            displayName: Apply Terraform Plan
            condition: eq(variables['terraformPlan.changesPresent'], 'true')
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: 'main.tfplan'
              environmentServiceNameAzureRM: 'WorkloadServiceConnection'
