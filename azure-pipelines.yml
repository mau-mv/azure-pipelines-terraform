trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: 'latest'

stages:
  - stage: setup
    jobs:
      - job: 
        continueOnError: false
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install awscli jq
            displayName: 'Install pip, AWS CLI, and jq'    

          - script: |
              set -e
              echo "Logging in to Azure..."
              export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
              export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
              export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
              export ARM_TENANT_ID=$(ARM_TENANT_ID)
              export AWS_ACCESS_KEY_ID=$(aws_access_key_id)
              export AWS_SECRET_ACCESS_KEY=$(aws_secret_access_key)
            displayName: 'Azure Login'
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'

          - script: |
              terraform init
            displayName: 'Terraform init'

          - script: |
              terraform validate
            displayName: 'Terraform validate'

          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform plan'

          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform apply'

          - script: |
              # Verify resources creation
              terraform output
            displayName: 'Verify Terraform outputs'
